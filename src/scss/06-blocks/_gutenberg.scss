@use "../01-abstract/variables";
@use "../02-tools/f-context-selector";
@use "../02-tools/f-get-gutter-width";
@use "../02-tools/m-align";
@use "../02-tools/m-editor-only";
@use "../02-tools/m-heading";

@include m-editor-only.editor-only {
    // ----
    // Post title style
    // ----
    .editor-post-title {

        @include m-heading.heading(h1);

        width: #{variables.$container-wide};
        max-width: var(--responsive--alignwide-width);
        margin-bottom: var(--spacing--block-3);
    }

    // ----
    // Editor UI font styles
    // ----
    .wp-block.block-editor-default-block-appender > textarea {
        font-family: var(--global--font-secondary);
        font-size: variables.$font-size-md;
    }

    // ----
    // Disable links in ACF blocks
    // The template block must have a ".block" class. Example : <div class="block block--my-custom-block">
    // ----
    .acf-block-preview {
        > .block {
            a,
            button {
                pointer-events: none;
            }
        }
    }
}

// ----
// Drop cap
// ----
.has-drop-cap:not(:focus)::first-letter {
    float: left;
    margin: .1em .1em 0 0;
    font-family: var(variables.$font-family-primary);
    font-size: calc(1.2 * var(--heading--font-size-h1));
    font-style: normal;
    font-weight: var(--heading--font-weight);
    line-height: .66;
    text-transform: uppercase;
}

#{f-context-selector.context-selector(".blocks-container", ".is-root-container")} {
    // ----
    // Alignements horizontaux
    // ----
    > :where(*) {
        width: #{variables.$container-default};
        max-width: var(--responsive--aligndefault-width);
        margin-right: auto;
        margin-left: auto;
    }

    @include m-editor-only.editor-only {
        > .wp-block[class*="wp-block-acf"],
        > .wp-block[class*="wp-block-beapi-manual-block"],
        > .wp-block[class*="wp-block-beapi-dynamic-block"] {
            width: 100%;
            max-width: none;
        }

        > .wp-block[class*="wp-block-acf"].is-selected {
            width: #{variables.$container-wide};
            max-width: var(--responsive--alignwide-width);
        }

        // The template block must have a ".block" class. Example : <div class="block block--my-custom-block">
        > :where(.wp-block[class*="wp-block-acf"]) :where(.block),
        > :where(.wp-block[class*="wp-block-beapi-manual-block"]) :where(.block),
        > :where(.wp-block[class*="wp-block-beapi-dynamic-block"]) :where(.block) {
            width: variables.$container-default;
            max-width: var(--responsive--aligndefault-width);
            margin-right: auto;
            margin-left: auto;
        }
    }

    #{f-context-selector.context-selector(".alignwide", "[data-align='wide']")} {
        width: #{variables.$container-wide};
        max-width: var(--responsive--alignwide-width);
    }

    #{f-context-selector.context-selector(".alignfull", "[data-align='full']")} {
        width: 100%;
        max-width: var(--responsive--alignfull-width);
    }

    .alignleft {

        @include m-align.align;
    }

    .alignright {

        @include m-align.align(right);
    }

    .aligncenter {
        display: block;
        margin-right: auto;
        margin-left: auto;
        clear: both;
    }

    .alignleft,
    .alignright,
    .aligncenter {
        margin-bottom: var(--spacing--block-1);
    }

    :where(.is-layout-flex),
    :where(.is-layout-grid) {
        gap: f-get-gutter-width.get-gutter-width();
    }

    // ----
    // Alignements verticaux
    // ----
    > *,
    [class*="inner-container"]:not(.is-layout-grid) > * {
        margin-top: var(--spacing--block-1);
        margin-bottom: var(--spacing--block-1);

        &:first-child {
            margin-top: 0;
        }

        &:last-child {
            margin-bottom: 0;
        }

        &.alignleft,
        &.alignright,
        &.alignleft:first-child + *,
        &.alignright:first-child + *,
        &.alignfull.has-background {
            margin-top: 0;
        }

        &:last-child,
        &.alignfull.has-background {
            margin-bottom: 0;
        }

        /* Reset alignleft and alignright margins after alignfull */
        &.alignfull + .alignleft,
        &.alignfull + .alignright {
            margin-top: var(--spacing--block-1);
        }
    }

    @include m-editor-only.editor-only {

        > * {

            &:last-child {
                margin-bottom: var(--spacing--block-1);
            }
        }

        [class*="inner-container"] > * {
            max-width: none;
        }
    }
}
